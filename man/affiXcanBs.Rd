% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AffiXcan.R
\name{affiXcanBs}
\alias{affiXcanBs}
\title{Fit a linear model and compute ANOVA p value}
\usage{
affiXcanBs(exprMatrix, assay, regionAssoc, pca, cov, cores)
}
\arguments{
\item{exprMatrix}{A SummarizedExperiment object containing expression data}

\item{assay}{A string with the name of the object in
SummarizedExperiment::assays(exprMatrix) that contains expression values}

\item{regionAssoc}{A data.frame with the associations between regulatory
regions and expressed genes, and with colnames = c("REGULATORY_REGION",
"EXPRESSED_REGION")}

\item{pca}{A list, which is the returningObject$pca from affiXcanPca()}

\item{cov}{A data.frame with covariates values for the population structure}

\item{cores}{An integer >0; if cores=1 processes will not be parallelized}
}
\value{
A list containing lists named as the REGULATORY_REGIONS found in the
param regionAssoc that have a correspondent name in the param pca.
Each of these lists contains three objects:

   coefficients: An object containing the coefficients of the principal
   components used in the model, completely similar to the "coefficients"
   from the results of lm()

   pval: The uncorrected anova pvalue of the model, retrieved from
   anova(model, modelReduced, test="F")$'Pr(>F)'[2]

   r.sq: The coefficient of determination between the real total expression
   values and the imputed GReX, retrived from summary(model)$r.squared

   correctedP: The p value after the benjamini-hochberg correction for
   multiple testing, retrived using p.adjust(pvalues, method="BH")
}
\description{
Fit a linear model and compute ANOVA p value
}
\examples{
trainingTbaPaths <- system.file("extdata","training.tba.toydata.rds",
package="AffiXcan")

data(exprMatrix)
data(regionAssoc)
data(trainingCovariates)

assay <- "values"

training <- affiXcanTrain(exprMatrix=exprMatrix, assay=assay,
tbaPaths=trainingTbaPaths, regionAssoc=regionAssoc, cov=trainingCovariates,
varExplained=80, scale=TRUE, cores=1)

pca <- training$pca 

bs <- affiXcanBs(exprMatrix=exprMatrix, assay=assay, regionAssoc=regionAssoc,
pca=pca, cov=trainingCovariates, cores=1)
}
